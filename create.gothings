#!/bin/bash
#                                                                    2020-03-12
#    GOTHINGS su linux PC
                                                                  Version="0.04"
#  NOTA: primo tentativo sul PC locale
#
#
#
#  Vedi doc in:
#    .../github-gothings/gothings-scratchpad/README.DaRicordare
#         <-- cerca:      Progetto localserver  |
#
#===============================================================================
#                                                                 Organizzazione
#
#    passa il controllo a ~/dockrepo/sysdata/localserver/localserver-go
#
#
#
################################################################################
#
#==============================================================================
echo
echo "========================================================= local GOTHINGS"
echo
echo "      GOTHINGS boot loader for PC on things LAN"
echo
echo "========================================================= version ${Version}"
echo
#
################################################################################
#                                                                variabili utili
# ----------------------------------
# Mode: DEBUG
DebugMode=1                     # 0 == NO debug     > 0 == Show debug info
#
# ----------------------------------
# Define app
AppName="local-gothings"
AppDisplayName="GoThings"
#
# ----------------------------------
# variabili interne
HomeDir=~/
DockDir="${HomeDir}dockrepo/"
AppDir="${DockDir}sysdata/${AppName}/"
FileName="localserverdirs.tar.gz"
#        https://github.com/fpirri/gothings-localserver/raw/main/localserverdirs.tar.gz
GitFile="https://github.com/fpirri/gothings-localserver/raw/main/${FileName}"
LocalFile="${HomeDir}${FileName}"
# ----------------------------------
# costanti varie
Red='\033[0;41;30m'
Std='\033[0;0;39m'
#
#
##########################################################################
#  Funzioni utili
##########################################################################
avanti(){
# Domanda di continuazione personalizzabile
# call:    avanti \$1
#   \$1:   <stringa di domanda>
  echo "----------------------------------------------------------------"
  read -rsp "$1" -n 1 key
  echo
}
#
pause() {
#  Domanda 'continue or exit'
  avanti 'Press any key to continue or ^C to exit ...'
}
#
##########################################################################
dots(){
# wait $1 seconds, printing dots on the screen
#   $1 :  # of seconds to wait
  local param1
  printf -v param1 '%d\n' $1 2>/dev/null # converti in intero con tutti i controlli
  while [ $param1 -gt 0 ]
  do
    echo -n "."
    sleep 0.5
    echo -n "."
    sleep 0.5
    let "--param1"
  done
}
#
##########################################################################
dots_nl(){ #  Dots 'new line'
# wait $1 seconds, printing dots on the screen
#
# add a newline at the end
#
  dots $1
  echo
}
#
################################################################################
#                                                                avvisi iniziali
echo "This script downloads the archive:"
echo "  localserver.tar.gz"
echo "from github and expand it to the ~/dockrepo directory of this machine."
echo
echo "Please read the README.md file on"
echo "  https://github.com/fpirri/gothings-localserver#readme"
echo "for an explanation of the operations that will be performed."
echo
echo "At the end, the user will be able to verify the operations carried out"
echo "and execute the script for creating the local web server."
echo "Your sudo password will be asked for in the following."
echo
echo "You should have Docker installed on your system."
echo
pause
echo
echo "Let's verify the docker installation:"
sudo docker version
DockerOk=$?
echo
if [ $DockerOk -gt 0 ]
then
  echo "docker not running!"
  echo "Please install docker in your PC"
  echo ""
  return 1
  echo "-------"
  exit
fi
dots 2
#
################################################################################
#
echo "No errors found"
echo ""
echo "archive to read from github:"
echo "    ${GitFile}"
echo "into local file"
echo "    ${LocalFile}"
echo
wget -O ${LocalFile} $GitFile
echo
if [[ -s $LocalFile ]]; then
  echo
  dots 3
  echo "The archive file exists, you can expand it"
else
  echo "File $LocalFile not found, stop processing"
  echo
  return 1
  echo "-------"
  exit
fi
echo
read -rsp "Do you like to EXPAND the archive into ~/dockrepo ? [y/N] " -n 1 key
case "$key" in
    [yY]) 
      echo
      echo "Expand into ~/dockrepo ..."
      echo
      sudo tar xpf "${LocalFile}" -C "$HomeDir"
      echo
      echo "Done."
      echo
      ;;
    *)
      echo
      echo "Nothing do, back to console"
      dots 2
      echo
      exit
      ;;
esac
#
################################################################################
#                                                  creazione dei docker networks
echo ""
echo "Create docker networks for gothings"
echo
echo "Please note that the following will show 'already exists' warnings"
echo "if this section is started multiple times." 
echo "These warnings are not influential."
echo
echo "- gothingsnet"
sudo docker network create -d bridge --subnet 172.29.196.0/24 --gateway 172.29.196.1 gothingsnet  
echo "- servicenet"
sudo docker network create -d bridge --subnet 172.29.195.0/24 --gateway 172.29.195.1 servicenet
echo 
#
################################################################################
#                                                              exec start script
echo
echo "You may like to immediately start the localserver container."
echo
read -rsp "Do you like to start the localserver now ? [y/N] " -n 1 key
case "$key" in
  [yY]) 
    echo
    echo "Start localserver ...."
    ./dockrepo/start_localserver
    echo
    echo "Done."
    echo
    ;;
  *)
    echo
    echo
    echo "Nothing to do, back to console"
    dots 2
    echo
    exit
    ;;
esac
#
################################################################################
#
